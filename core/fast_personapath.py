"""
Fast PersonaPath - Optimized Career Intelligence System
Provides instant, detailed responses using cached database queries
"""

import re
from typing import Dict, List, Optional
import streamlit as st

class FastPersonaPath:
    """Optimized PersonaPath for instant responses with detailed career guidance"""
    
    def __init__(self, db_manager):
        self.db_manager = db_manager
        self._roles_cache = None
        self._role_mapping = None
        print("[FastPersonaPath] Initialized with performance optimizations")
    
    def _get_roles_cache(self):
        """Get cached roles for instant access"""
        if self._roles_cache is None:
            self._roles_cache = self.db_manager.get_all_job_roles()
            print(f"[FastPersonaPath] Cached {len(self._roles_cache)} roles")
        return self._roles_cache
    
    def _get_role_mapping(self):
        """Get cached role mapping for instant lookups"""
        if self._role_mapping is None:
            self._role_mapping = {
                'sde': 'Software Developer',
                'software engineer': 'Software Developer',
                'software development': 'Software Developer',
                'software developer': 'Software Developer',
                'developer': 'Software Developer',
                'programmer': 'Software Developer',
                'coding': 'Software Developer',
                'programming': 'Software Developer',
                'data science': 'Data Scientist',
                'data scientist': 'Data Scientist',
                'ml engineer': 'Data Scientist',
                'machine learning': 'Data Scientist',
                'data analyst': 'Data Analyst',
                'analyst': 'Data Analyst',
                'data analysis': 'Data Analyst',
                'ui/ux': 'UI/UX Designer',
                'designer': 'UI/UX Designer',
                'ux designer': 'UI/UX Designer',
                'ui designer': 'UI/UX Designer',
                'product manager': 'Product Manager',
                'product management': 'Product Manager',
                'pm': 'Product Manager',
                'cashier': 'Cashier',
                'retail': 'Cashier',
                'customer support': 'Customer Support Specialist',
                'support specialist': 'Customer Support Specialist',
                'customer service': 'Customer Support Specialist',
                'hr manager': 'HR Manager',
                'human resources': 'HR Manager',
                'hr': 'HR Manager',
                'devops': 'DevOps Engineer',
                'dev ops': 'DevOps Engineer',
                'qa': 'Quality Assurance Engineer',
                'quality assurance': 'Quality Assurance Engineer',
                'testing': 'Quality Assurance Engineer',
                'financial analyst': 'Financial Analyst',
                'finance': 'Financial Analyst',
                'marketing': 'Marketing Specialist',
                'sales': 'Sales Representative',
                'content writer': 'Content Writer',
                'writer': 'Content Writer',
                'content': 'Content Writer'
            }
        return self._role_mapping
    
    def answer_career_question(self, user_query: str, user_id: int = 1) -> str:
        """Provide instant, detailed career responses"""
        
        # Step 1: Normalize query
        normalized = user_query.lower().strip()
        print(f"[FastPersonaPath] Query: {user_query}")
        
        # Step 2: Quick role identification
        identified_role = self._identify_role_fast(normalized)
        
        # Step 3: Get role data instantly from cache
        role_info = None
        if identified_role:
            roles = self._get_roles_cache()
            for role in roles:
                if role['title'].lower() == identified_role.lower():
                    role_info = role
                    break
        
        # Step 4: Generate detailed response
        response = self._generate_detailed_response(user_query, normalized, identified_role, role_info)
        
        # Step 5: Save to history
        try:
            self.db_manager.save_chat_history(user_id, user_query, response, identified_role or "General")
        except:
            pass  # Don't let history saving break the response
        
        return response
    
    def _identify_role_fast(self, normalized_query: str) -> Optional[str]:
        """Fast role identification using cached mappings"""
        role_mapping = self._get_role_mapping()
        
        # Handle transition queries - prioritize target role
        if any(word in normalized_query for word in ['transition', 'switch', 'move', 'change', 'become', 'from']):
            # Look for target role patterns
            target_patterns = [
                r'(?:to|become|switch to|transition to|move to)\s+([a-zA-Z\s/]+?)(?:\?|$|role|position)',
                r'(?:to|become)\s+(?:a|an)?\s*([a-zA-Z\s/]+?)(?:\?|$|role|position)',
            ]
            
            for pattern in target_patterns:
                match = re.search(pattern, normalized_query)
                if match:
                    target_role = match.group(1).strip().lower()
                    for key, official_title in role_mapping.items():
                        if key in target_role or target_role in key:
                            return official_title
        
        # Direct role matching
        for key, official_title in role_mapping.items():
            if key in normalized_query:
                return official_title
        
        return None
    
    def _generate_detailed_response(self, original_query: str, normalized_query: str, 
                                  identified_role: Optional[str], role_info: Optional[Dict]) -> str:
        """Generate comprehensive, detailed responses"""
        
        # Determine query type
        if any(word in normalized_query for word in ['transition', 'switch', 'move', 'change', 'from', 'become']):
            return self._generate_transition_response(original_query, normalized_query, role_info)
        elif any(word in normalized_query for word in ['salary', 'pay', 'compensation', 'money', 'earning']):
            return self._generate_salary_response(role_info)
        elif any(word in normalized_query for word in ['skills', 'requirements', 'qualifications', 'need']):
            return self._generate_skills_response(role_info)
        elif any(word in normalized_query for word in ['future', 'scope', 'growth', 'career path', 'progression', 'goals']):
            return self._generate_growth_response(role_info)
        elif any(word in normalized_query for word in ['responsibilities', 'duties', 'day-to-day', 'tasks', 'daily']):
            return self._generate_responsibilities_response(role_info)
        else:
            return self._generate_overview_response(role_info)
    
    def _generate_transition_response(self, original_query: str, normalized_query: str, target_info: Optional[Dict]) -> str:
        """Generate detailed career transition guidance"""
        
        if not target_info:
            return """**Career Transition Guidance**

I'd be happy to help you with your career transition! To provide specific guidance, I need more details about your target role.

**General Transition Steps:**
1. **Skill Assessment**: Identify gaps between your current and target role
2. **Development Plan**: Create a timeline to build missing competencies
3. **Experience Building**: Look for projects or assignments in your target area
4. **Networking**: Connect with professionals in your desired field
5. **Internal Opportunities**: Explore mobility programs within the organization

**Next Steps:**
- Specify your target role for detailed transition planning
- Connect with HR for internal mobility resources
- Consider mentorship programs in your area of interest

Would you like to specify your target role for more detailed guidance?"""
        
        title = target_info['title']
        department = target_info['department']
        level = target_info['level']
        skills = target_info['skills_required']
        salary_min = target_info.get('salary_min', 0)
        salary_max = target_info.get('salary_max', 0)
        description = target_info['description']
        
        # Extract source role if mentioned
        source_role = None
        source_match = re.search(r'(?:from|current)\s+([a-zA-Z\s/]+?)\s+(?:to|become)', normalized_query)
        if source_match:
            source_text = source_match.group(1).strip().lower()
            role_mapping = self._get_role_mapping()
            for key, official_title in role_mapping.items():
                if key in source_text:
                    source_role = official_title
                    break
        
        response = f"""**Career Transition Guide: {source_role or 'Current Role'} ‚Üí {title}**

üéØ **Target Role Overview**
**Position**: {title}
**Department**: {department}
**Level**: {level}
**Salary Range**: ${salary_min:,} - ${salary_max:,} annually

üìã **Role Description**
{description}

üõ§Ô∏è **Transition Pathway**"""

        # Add source-specific guidance if available
        if source_role:
            roles_cache = self._get_roles_cache()
            source_info = None
            for role in roles_cache:
                if role['title'] == source_role:
                    source_info = role
                    break
            
            if source_info:
                source_skills = set(skill.strip().lower() for skill in source_info['skills_required'].split(','))
                target_skills = set(skill.strip().lower() for skill in skills.split(','))
                
                transferable = source_skills.intersection(target_skills)
                missing = target_skills - source_skills
                
                if transferable:
                    response += f"""

‚úÖ **Transferable Skills You Already Have**
{chr(10).join(f"‚Ä¢ {skill.title()}" for skill in sorted(transferable)[:6])}"""
                
                if missing:
                    response += f"""

üìö **Skills to Develop**
{chr(10).join(f"‚Ä¢ {skill.title()}" for skill in sorted(missing)[:6])}"""
        
        skills_list = [skill.strip() for skill in skills.split(',')]
        response += f"""

üîß **Essential Skills for {title}**
{chr(10).join(f"‚Ä¢ {skill}" for skill in skills_list[:8])}

üöÄ **Action Plan**
1. **Immediate (1-3 months)**
   ‚Ä¢ Research {title} responsibilities and industry trends
   ‚Ä¢ Begin developing core skills: {skills_list[0]}, {skills_list[1] if len(skills_list) > 1 else 'related technologies'}
   ‚Ä¢ Connect with current {title}s for informational interviews

2. **Short-term (3-6 months)**
   ‚Ä¢ Complete relevant training or certifications
   ‚Ä¢ Take on projects that utilize {title} skills
   ‚Ä¢ Build a portfolio demonstrating your capabilities

3. **Long-term (6-12 months)**
   ‚Ä¢ Apply for internal {title} positions
   ‚Ä¢ Leverage your network for opportunities
   ‚Ä¢ Consider cross-functional projects to gain experience

üí° **Success Tips**
‚Ä¢ Start developing {title} skills in your current role
‚Ä¢ Attend {department} team meetings as an observer
‚Ä¢ Find a mentor currently working as a {title}
‚Ä¢ Highlight transferable skills in your transition story

üìû **Next Steps**
‚Ä¢ Schedule a meeting with your manager to discuss career goals
‚Ä¢ Connect with HR about internal mobility programs
‚Ä¢ Reach out to {title}s in the {department} department for guidance

*Remember: Career transitions take time, but with the right plan and persistence, you can successfully move into your target role!*"""
        
        return response
    
    def _generate_salary_response(self, role_info: Optional[Dict]) -> str:
        """Generate detailed salary information"""
        
        if not role_info:
            return """**Salary Information**

I'd be happy to provide salary details! Please specify the role you're interested in so I can give you accurate compensation information based on our internal data.

**Available Roles**: Software Developer, Data Scientist, Data Analyst, Product Manager, UI/UX Designer, and many more.

**Factors Affecting Salary:**
‚Ä¢ Experience level (Entry, Mid, Senior)
‚Ä¢ Department and specialization
‚Ä¢ Geographic location
‚Ä¢ Performance and tenure
‚Ä¢ Market demand for skills

Contact HR for current salary bands and detailed compensation packages."""
        
        title = role_info['title']
        department = role_info['department']
        level = role_info['level']
        salary_min = role_info.get('salary_min', 0)
        salary_max = role_info.get('salary_max', 0)
        
        return f"""**{title} - Comprehensive Salary Information**

üí∞ **Compensation Package**
**Base Salary Range**: ${salary_min:,} - ${salary_max:,} annually
**Department**: {department}
**Experience Level**: {level}

üìä **Salary Breakdown**
‚Ä¢ **Entry Level**: Typically starts around ${salary_min:,}
‚Ä¢ **Mid Level**: Usually ranges ${int((salary_min + salary_max) / 2):,} - ${salary_max:,}
‚Ä¢ **Senior Level**: Can exceed ${salary_max:,} with experience and performance

üíº **Additional Benefits** (Typical for {title} roles)
‚Ä¢ Health insurance and medical benefits
‚Ä¢ Retirement planning and 401(k) matching
‚Ä¢ Professional development budget
‚Ä¢ Flexible working arrangements
‚Ä¢ Performance-based bonuses
‚Ä¢ Stock options (where applicable)

üìà **Salary Growth Potential**
The {title} role in {department} offers strong earning potential. With demonstrated skills and performance, salary can increase by 10-20% annually through promotions and merit increases.

**Key Factors Influencing Your Salary:**
‚Ä¢ Relevant technical skills and certifications
‚Ä¢ Years of experience in {department}
‚Ä¢ Performance reviews and project outcomes
‚Ä¢ Leadership and mentorship capabilities
‚Ä¢ Contribution to team and company goals

üí° **Maximizing Your Earning Potential**
‚Ä¢ Continuously develop in-demand skills
‚Ä¢ Take on high-visibility projects
‚Ä¢ Seek feedback and act on it
‚Ä¢ Consider cross-functional experience
‚Ä¢ Build strong relationships across teams

üìû **Next Steps**
For specific salary discussions based on your experience and qualifications, schedule a conversation with:
‚Ä¢ Your current manager for internal moves
‚Ä¢ HR for detailed compensation discussions
‚Ä¢ Recruiting team for external opportunities

*Salary ranges are based on current market data and internal compensation bands. Actual offers may vary based on experience, skills, and performance.*"""
    
    def _generate_skills_response(self, role_info: Optional[Dict]) -> str:
        """Generate detailed skills and requirements information"""
        
        if not role_info:
            return """**Skills and Requirements**

I can provide detailed skills requirements for any role in our database! Please specify which position you're interested in.

**Popular Roles**: Software Developer, Data Scientist, Product Manager, UI/UX Designer, Data Analyst, DevOps Engineer, and more.

**General Skill Categories:**
‚Ä¢ Technical skills (programming, tools, platforms)
‚Ä¢ Soft skills (communication, leadership, problem-solving)
‚Ä¢ Industry knowledge and certifications
‚Ä¢ Experience requirements

What role would you like to explore?"""
        
        title = role_info['title']
        department = role_info['department']
        level = role_info['level']
        skills = role_info['skills_required']
        description = role_info['description']
        
        skills_list = [skill.strip() for skill in skills.split(',')]
        
        # Categorize skills
        technical_skills = []
        soft_skills = []
        tools_platforms = []
        
        for skill in skills_list:
            skill_lower = skill.lower()
            if any(tech in skill_lower for tech in ['python', 'java', 'sql', 'javascript', 'react', 'programming', 'coding']):
                technical_skills.append(skill)
            elif any(tool in skill_lower for tool in ['tableau', 'excel', 'powerbi', 'jira', 'git', 'aws', 'azure']):
                tools_platforms.append(skill)
            else:
                if skill not in technical_skills and skill not in tools_platforms:
                    soft_skills.append(skill)
        
        return f"""**{title} - Complete Skills & Requirements Guide**

üéØ **Role Overview**
**Position**: {title}
**Department**: {department}
**Experience Level**: {level}

üìã **Role Responsibilities**
{description}

üîß **Core Technical Skills**
{chr(10).join(f"‚Ä¢ {skill}" for skill in technical_skills[:6]) if technical_skills else "‚Ä¢ Domain-specific technical knowledge"}

üõ†Ô∏è **Tools & Platforms**
{chr(10).join(f"‚Ä¢ {skill}" for skill in tools_platforms[:6]) if tools_platforms else "‚Ä¢ Industry-standard tools and software"}

üí° **Essential Soft Skills**
{chr(10).join(f"‚Ä¢ {skill}" for skill in soft_skills[:6]) if soft_skills else "‚Ä¢ Strong communication and collaboration"}

üìö **Skill Development Roadmap**

**Phase 1: Foundation (0-3 months)**
‚Ä¢ Master the top 3 essential skills: {', '.join(skills_list[:3])}
‚Ä¢ Build basic understanding of {department} workflows
‚Ä¢ Complete foundational training and certifications

**Phase 2: Proficiency (3-6 months)**
‚Ä¢ Develop intermediate expertise in: {', '.join(skills_list[3:6]) if len(skills_list) > 3 else 'advanced concepts'}
‚Ä¢ Apply skills to real projects and assignments
‚Ä¢ Seek feedback from experienced {title}s

**Phase 3: Mastery (6-12 months)**
‚Ä¢ Achieve advanced proficiency in all core skills
‚Ä¢ Mentor others and share knowledge
‚Ä¢ Stay current with industry trends and innovations

üéì **Recommended Learning Resources**
‚Ä¢ **Online Courses**: Coursera, Udemy, LinkedIn Learning
‚Ä¢ **Certifications**: Industry-recognized credentials
‚Ä¢ **Internal Training**: Company-specific programs
‚Ä¢ **Mentorship**: Connect with senior {title}s
‚Ä¢ **Practice Projects**: Build portfolio demonstrating skills

üìä **Skill Assessment Checklist**
Rate yourself (1-5) on each core skill:
{chr(10).join(f"‚ñ° {skill} - Rate your current level" for skill in skills_list[:8])}

üí™ **Building Missing Skills**
‚Ä¢ **Identify Gaps**: Compare your current skills to requirements
‚Ä¢ **Create Plan**: Prioritize high-impact skills first
‚Ä¢ **Practice Regularly**: Dedicate time weekly to skill development
‚Ä¢ **Apply Learning**: Use new skills in current projects
‚Ä¢ **Track Progress**: Document your growth and achievements

üöÄ **Standing Out as a {title}**
‚Ä¢ Develop expertise in emerging technologies
‚Ä¢ Contribute to cross-functional projects
‚Ä¢ Share knowledge through presentations or documentation
‚Ä¢ Stay engaged with {department} industry communities
‚Ä¢ Seek stretch assignments that challenge your skills

üìû **Next Steps**
‚Ä¢ Assess your current skill level against these requirements
‚Ä¢ Create a personalized learning plan
‚Ä¢ Connect with {title}s for advice and mentorship
‚Ä¢ Explore internal training opportunities
‚Ä¢ Consider relevant certifications or courses

*Remember: Skills development is a continuous journey. Focus on building a strong foundation first, then expand into specialized areas that align with your career goals.*"""
    
    def _generate_growth_response(self, role_info: Optional[Dict]) -> str:
        """Generate detailed growth and future scope information"""
        
        if not role_info:
            return """**Career Growth and Future Scope**

I can provide detailed career progression information for any role! Please specify which position you're interested in exploring.

**Growth Areas Available:**
‚Ä¢ Technical career tracks
‚Ä¢ Leadership and management paths
‚Ä¢ Cross-functional opportunities
‚Ä¢ Specialization tracks
‚Ä¢ External market opportunities

Which role's growth potential would you like to explore?"""
        
        title = role_info['title']
        department = role_info['department']
        level = role_info['level']
        skills = role_info['skills_required']
        
        return f"""**{title} - Career Growth & Future Scope Analysis**

üöÄ **Current Position Analysis**
**Role**: {title}
**Department**: {department}
**Current Level**: {level}

üìà **Growth Trajectory Options**

**1. Vertical Progression (Traditional Career Ladder)**
‚Ä¢ **Next Level**: Senior {title}
‚Ä¢ **Timeline**: 2-3 years with strong performance
‚Ä¢ **Requirements**: Mastery of core skills, leadership demonstration
‚Ä¢ **Compensation Growth**: 15-25% increase per promotion

**2. Leadership Track**
‚Ä¢ **Immediate**: Team Lead or Senior {title}
‚Ä¢ **Mid-term**: {department} Manager or Director
‚Ä¢ **Long-term**: VP of {department} or C-level positions
‚Ä¢ **Key Skills**: People management, strategic thinking, business acumen

**3. Specialization Paths**
‚Ä¢ **Technical Expert**: Deep expertise in specific technologies
‚Ä¢ **Domain Specialist**: Industry or functional expertise
‚Ä¢ **Consultant**: Internal or external advisory roles
‚Ä¢ **Innovation Leader**: R&D and emerging technology focus

**4. Cross-Functional Opportunities**
‚Ä¢ **Product Management**: Bridge between {department} and business
‚Ä¢ **Business Strategy**: Apply {department} skills to strategy roles
‚Ä¢ **Operations**: Process improvement and efficiency
‚Ä¢ **Training/Education**: Share expertise as internal trainer

üåü **Future Scope & Market Trends**

**Industry Outlook for {title}**
‚Ä¢ High demand expected to continue for next 5-10 years
‚Ä¢ Emerging technologies creating new specialization opportunities
‚Ä¢ Remote and hybrid work increasing role accessibility
‚Ä¢ Cross-functional collaboration becoming more important

**Emerging Opportunities**
‚Ä¢ AI/ML integration in {department} workflows
‚Ä¢ Digital transformation initiatives
‚Ä¢ Data-driven decision making roles
‚Ä¢ Sustainability and social impact projects

**Skills for Future Success**
‚Ä¢ Core technical skills: {skills.split(',')[0]}, {skills.split(',')[1] if len(skills.split(',')) > 1 else 'advanced technologies'}
‚Ä¢ Business acumen and strategy thinking
‚Ä¢ Change management and adaptability
‚Ä¢ Cross-cultural and remote collaboration
‚Ä¢ Continuous learning mindset

üéØ **5-Year Career Planning**

**Year 1-2: Foundation Building**
‚Ä¢ Excel in current {title} responsibilities
‚Ä¢ Build reputation for reliability and quality
‚Ä¢ Develop expertise in 2-3 core areas
‚Ä¢ Establish strong internal network

**Year 3-4: Expansion & Leadership**
‚Ä¢ Take on stretch assignments and leadership roles
‚Ä¢ Mentor junior team members
‚Ä¢ Drive innovation projects or process improvements
‚Ä¢ Consider lateral moves for broader experience

**Year 5+: Strategic Impact**
‚Ä¢ Lead major initiatives or teams
‚Ä¢ Influence {department} strategy and direction
‚Ä¢ Develop expertise in emerging technologies
‚Ä¢ Consider external opportunities or consulting

üí∞ **Compensation Growth Potential**

**Salary Progression Estimates**
‚Ä¢ **Senior {title}**: 20-40% increase from current level
‚Ä¢ **Lead/Manager**: 40-70% increase from current level
‚Ä¢ **Director**: 70-150% increase from current level
‚Ä¢ **VP/Executive**: 150%+ increase from current level

**Total Compensation Factors**
‚Ä¢ Base salary increases with promotions
‚Ä¢ Performance bonuses and incentives
‚Ä¢ Stock options and equity participation
‚Ä¢ Professional development investments
‚Ä¢ Leadership and retention bonuses

üéì **Development Recommendations**

**Immediate (Next 6 months)**
‚Ä¢ Excel in current role and exceed expectations
‚Ä¢ Identify 1-2 growth areas to focus on
‚Ä¢ Seek feedback from manager and peers
‚Ä¢ Begin building skills for next-level responsibilities

**Short-term (6-18 months)**
‚Ä¢ Take on additional responsibilities or projects
‚Ä¢ Develop leadership or specialized expertise
‚Ä¢ Build relationships across {department} and other teams
‚Ä¢ Consider relevant certifications or training

**Long-term (18+ months)**
‚Ä¢ Demonstrate readiness for promotion
‚Ä¢ Apply for senior roles or leadership positions
‚Ä¢ Expand network outside immediate team
‚Ä¢ Consider industry involvement or external visibility

üìû **Action Steps**
1. **Career Discussion**: Schedule time with your manager to discuss growth goals
2. **Mentorship**: Connect with senior {title}s for guidance
3. **Development Plan**: Create a detailed skill and experience development plan
4. **Network Building**: Actively engage with colleagues across {department}
5. **Performance Focus**: Consistently deliver excellent results in current role

*The {title} role offers excellent long-term career prospects with multiple paths for growth and advancement. Your success will depend on consistent performance, continuous learning, and strategic career planning.*"""
    
    def _generate_responsibilities_response(self, role_info: Optional[Dict]) -> str:
        """Generate detailed day-to-day responsibilities"""
        
        if not role_info:
            return """**Role Responsibilities**

I can provide detailed day-to-day responsibilities for any position! Please specify which role you'd like to learn about.

**Available Roles**: Software Developer, Data Scientist, Product Manager, UI/UX Designer, and many others in our database.

**What I'll Cover:**
‚Ä¢ Daily tasks and activities
‚Ä¢ Weekly and monthly responsibilities
‚Ä¢ Key deliverables and outcomes
‚Ä¢ Collaboration and meeting patterns
‚Ä¢ Success metrics and expectations

Which role interests you?"""
        
        title = role_info['title']
        department = role_info['department']
        level = role_info['level']
        description = role_info['description']
        skills = role_info['skills_required']
        
        return f"""**{title} - Day-to-Day Responsibilities & Tasks**

üéØ **Role Overview**
**Position**: {title}
**Department**: {department}
**Level**: {level}

üìã **Core Responsibilities**
{description}

‚è∞ **Daily Activities (Typical Day)**

**Morning (9:00 AM - 12:00 PM)**
‚Ä¢ Review and prioritize daily tasks and objectives
‚Ä¢ Check and respond to team communications and updates
‚Ä¢ Participate in daily standups or team sync meetings
‚Ä¢ Focus on high-priority projects requiring deep concentration

**Afternoon (1:00 PM - 5:00 PM)**
‚Ä¢ Collaborate with team members on ongoing projects
‚Ä¢ Attend scheduled meetings and cross-functional discussions
‚Ä¢ Work on deliverables and project milestones
‚Ä¢ Conduct research and analysis relevant to {title} work

**End of Day**
‚Ä¢ Update project status and documentation
‚Ä¢ Plan priorities for the following day
‚Ä¢ Respond to any urgent requests or communications

üìÖ **Weekly Responsibilities**

**Monday - Planning & Strategy**
‚Ä¢ Weekly team meetings and goal setting
‚Ä¢ Review project timelines and deliverables
‚Ä¢ Plan resource allocation and task distribution

**Tuesday-Thursday - Execution & Development**
‚Ä¢ Core {title} work and project development
‚Ä¢ Deep focus on technical tasks and problem-solving
‚Ä¢ Collaboration with stakeholders and team members

**Friday - Review & Improvement**
‚Ä¢ Weekly review of accomplishments and challenges
‚Ä¢ Team retrospectives and process improvements
‚Ä¢ Documentation and knowledge sharing

üéØ **Key Deliverables & Outcomes**

**Daily Outputs**
‚Ä¢ Specific work products related to {skills.split(',')[0]}
‚Ä¢ Progress updates on ongoing projects
‚Ä¢ Quality contributions to team objectives

**Weekly Deliverables**
‚Ä¢ Completed project milestones or phases
‚Ä¢ Status reports and progress documentation
‚Ä¢ Collaborative solutions and team contributions

**Monthly Achievements**
‚Ä¢ Major project completions or significant progress
‚Ä¢ Process improvements and innovation contributions
‚Ä¢ Professional development and skill advancement

üë• **Collaboration Patterns**

**Internal Stakeholders**
‚Ä¢ **Direct Team**: Daily collaboration and communication
‚Ä¢ **{department} Leadership**: Regular updates and strategic alignment
‚Ä¢ **Cross-functional Teams**: Project-based collaboration
‚Ä¢ **Support Functions**: As needed for project success

**Meeting Schedule (Typical)**
‚Ä¢ **Daily Standups**: 15-30 minutes with immediate team
‚Ä¢ **Weekly Team Meetings**: 1-2 hours for planning and review
‚Ä¢ **Monthly Reviews**: Performance and goal assessment
‚Ä¢ **Quarterly Planning**: Strategic alignment and goal setting

**Communication Channels**
‚Ä¢ Slack/Teams for quick updates and questions
‚Ä¢ Email for formal communications and documentation
‚Ä¢ Video calls for complex discussions and presentations
‚Ä¢ In-person meetings for sensitive or strategic topics

üìä **Success Metrics & Expectations**

**Performance Indicators**
‚Ä¢ Quality of work output and deliverables
‚Ä¢ Timeliness of project completion and milestone achievement
‚Ä¢ Collaboration effectiveness and team contribution
‚Ä¢ Innovation and process improvement initiatives

**Behavioral Expectations**
‚Ä¢ Proactive communication and problem-solving
‚Ä¢ Continuous learning and skill development
‚Ä¢ Positive attitude and team collaboration
‚Ä¢ Adaptability to changing priorities and requirements

**Career Development Activities**
‚Ä¢ Regular skill building and training participation
‚Ä¢ Mentoring junior team members (for senior levels)
‚Ä¢ Contributing to {department} knowledge base and best practices
‚Ä¢ Staying current with industry trends and innovations

‚ö° **Challenges & Problem-Solving**

**Common Challenges**
‚Ä¢ Balancing multiple competing priorities
‚Ä¢ Managing stakeholder expectations and communications
‚Ä¢ Staying current with rapidly evolving {skills.split(',')[0]} technologies
‚Ä¢ Collaborating effectively across different time zones or locations

**Problem-Solving Approach**
‚Ä¢ Systematic analysis and root cause identification
‚Ä¢ Collaborative brainstorming and solution development
‚Ä¢ Testing and validation of proposed solutions
‚Ä¢ Documentation and knowledge sharing for future reference

üí° **Tips for Success in This Role**

**Time Management**
‚Ä¢ Use project management tools to track tasks and deadlines
‚Ä¢ Block calendar time for deep, focused work
‚Ä¢ Batch similar activities together for efficiency
‚Ä¢ Regular breaks to maintain productivity and creativity

**Skill Development**
‚Ä¢ Dedicate time weekly to learning new {skills.split(',')[0]} concepts
‚Ä¢ Practice skills through personal projects or experimentation
‚Ä¢ Seek feedback from colleagues and mentors
‚Ä¢ Stay engaged with {department} professional communities

**Relationship Building**
‚Ä¢ Be proactive in team communications and collaboration
‚Ä¢ Offer help and support to colleagues when possible
‚Ä¢ Participate actively in team social activities and events
‚Ä¢ Build relationships beyond immediate team

üìû **Getting Started**
‚Ä¢ Shadow a current {title} for a day to observe real activities
‚Ä¢ Review recent project examples and deliverables
‚Ä¢ Set up meetings with key stakeholders and collaborators
‚Ä¢ Establish your workspace and access to necessary tools

*The {title} role offers a dynamic mix of independent work and collaborative activities, with opportunities to make meaningful contributions to {department} success while developing your skills and career.*"""
    
    def _generate_overview_response(self, role_info: Optional[Dict]) -> str:
        """Generate comprehensive role overview"""
        
        if not role_info:
            return """**Role Information**

I have comprehensive information about many roles in our organization! Please specify which position you'd like to learn about.

**Popular Roles**: Software Developer, Data Scientist, Product Manager, UI/UX Designer, Data Analyst, DevOps Engineer, Customer Support Specialist, and many more.

**What I can provide:**
‚Ä¢ Complete role descriptions and requirements
‚Ä¢ Salary ranges and compensation details
‚Ä¢ Career growth opportunities
‚Ä¢ Day-to-day responsibilities
‚Ä¢ Skills and qualifications needed

Which role interests you?"""
        
        title = role_info['title']
        department = role_info['department']
        level = role_info['level']
        description = role_info['description']
        skills = role_info['skills_required']
        salary_min = role_info.get('salary_min', 0)
        salary_max = role_info.get('salary_max', 0)
        
        skills_list = [skill.strip() for skill in skills.split(',')]
        
        return f"""**{title} - Complete Role Overview & Career Guide**

üéØ **Position Summary**
**Role**: {title}
**Department**: {department}
**Experience Level**: {level}
**Salary Range**: ${salary_min:,} - ${salary_max:,} annually

üìã **Role Description**
{description}

üîß **Essential Skills & Qualifications**
{chr(10).join(f"‚Ä¢ {skill}" for skill in skills_list[:8])}

üíº **What Makes This Role Exciting**

**Impact & Influence**
‚Ä¢ Drive meaningful outcomes in {department}
‚Ä¢ Collaborate with talented professionals across the organization
‚Ä¢ Contribute to innovative projects and company growth
‚Ä¢ Build expertise in cutting-edge {skills_list[0] if skills_list else 'technologies'}

**Growth Opportunities**
‚Ä¢ Clear progression path to senior {title} roles
‚Ä¢ Leadership development in {department}
‚Ä¢ Cross-functional collaboration and learning
‚Ä¢ Professional development support and resources

**Work Environment**
‚Ä¢ Collaborative and supportive team culture
‚Ä¢ Flexible working arrangements and work-life balance
‚Ä¢ Access to modern tools and technologies
‚Ä¢ Continuous learning and development opportunities

üìà **Career Progression Path**

**Immediate Growth (1-2 years)**
‚Ä¢ Master core {title} responsibilities
‚Ä¢ Build expertise in {skills_list[0]} and {skills_list[1] if len(skills_list) > 1 else 'related areas'}
‚Ä¢ Establish strong working relationships
‚Ä¢ Take on additional responsibilities and projects

**Medium-term Advancement (2-5 years)**
‚Ä¢ Senior {title} or Lead positions
‚Ä¢ Specialization in high-demand areas
‚Ä¢ Team leadership or mentorship roles
‚Ä¢ Cross-departmental project leadership

**Long-term Opportunities (5+ years)**
‚Ä¢ Management roles in {department}
‚Ä¢ Director or VP positions
‚Ä¢ Consulting or advisory roles
‚Ä¢ Entrepreneurial opportunities

üí∞ **Comprehensive Compensation**

**Base Salary**
‚Ä¢ Entry Level: Around ${salary_min:,}
‚Ä¢ Experienced: ${int((salary_min + salary_max) / 2):,} - ${salary_max:,}
‚Ä¢ Senior Level: ${salary_max:,}+ with performance bonuses

**Additional Benefits**
‚Ä¢ Health insurance and wellness programs
‚Ä¢ Retirement savings with company matching
‚Ä¢ Professional development budget
‚Ä¢ Flexible PTO and work-life balance support
‚Ä¢ Performance-based bonuses and recognition

üöÄ **Why Choose {title}?**

**Market Demand**
‚Ä¢ High demand for skilled {title}s across industries
‚Ä¢ Strong job security and career stability
‚Ä¢ Competitive compensation and growth potential
‚Ä¢ Opportunity to work with emerging technologies

**Personal Fulfillment**
‚Ä¢ Solve complex, meaningful problems
‚Ä¢ Continuous learning and intellectual growth
‚Ä¢ Work with diverse, talented teams
‚Ä¢ Make tangible impact on business outcomes

**Future Outlook**
‚Ä¢ Growing importance of {department} expertise
‚Ä¢ Emerging opportunities in AI, automation, and innovation
‚Ä¢ Remote work flexibility and global opportunities
‚Ä¢ Strong long-term career prospects

üéì **Getting Started or Transitioning**

**If You're New to {title}:**
‚Ä¢ Focus on building foundational skills: {skills_list[0]}, {skills_list[1] if len(skills_list) > 1 else 'core competencies'}
‚Ä¢ Complete relevant training and certifications
‚Ä¢ Build a portfolio demonstrating your capabilities
‚Ä¢ Network with current {title}s for insights and advice

**If You're Transitioning:**
‚Ä¢ Identify transferable skills from your current role
‚Ä¢ Address skill gaps through targeted learning
‚Ä¢ Seek internal mentorship and guidance
‚Ä¢ Look for stretch assignments to gain relevant experience

üìû **Next Steps**

**Immediate Actions**
‚Ä¢ Connect with current {title}s for informational interviews
‚Ä¢ Research {department} team structure and recent projects
‚Ä¢ Assess your current skills against role requirements
‚Ä¢ Explore relevant training and development opportunities

**Application Process**
‚Ä¢ Work with HR to understand internal mobility options
‚Ä¢ Prepare compelling examples of relevant experience
‚Ä¢ Develop a clear narrative about your interest in {title}
‚Ä¢ Consider relevant projects or volunteer work to build experience

**Ongoing Development**
‚Ä¢ Stay current with {department} industry trends
‚Ä¢ Participate in relevant professional communities
‚Ä¢ Build your professional network
‚Ä¢ Continuously develop both technical and soft skills

*The {title} role offers an excellent opportunity for professional growth, meaningful work, and competitive compensation. With the right preparation and commitment, you can build a successful and fulfilling career in this position.*

Would you like more specific information about any aspect of this role, such as the application process, specific skill development, or day-to-day responsibilities?"""
    
    def refresh_cache(self):
        """Refresh cached data"""
        self._roles_cache = None
        self._role_mapping = None
        print("[FastPersonaPath] Cache refreshed")
        return "Knowledge base cache refreshed successfully!"